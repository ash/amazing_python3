Here is the solution of Day 1 of the Code of Advent programming challenge of this year. You can find the descirtion of the problem at https://adventofcode.com/2020/day/1.

The task is to take the list of integers (they are saved in `items.txt` in our case), and find such two number that add up to 2020. Then, multiply those numbers and print the result. The second part of the task is similar but you need to find three such numbers in the same list.

In this solution, I am first reading the file and convert each line to an integer number. This is done in a list comprehension on line 8. Then, the `size` variable loops over the two parts of the task, namely, it takes the values of 2 and 3 — the number of integers to find. Finally, the main loop scans the pairs or tripples of values (this is the variable `curr`). To get the current items, we are using the `itertools.combinations` function, which actually does what we want. You pass the `data` list and the number of items in the combination (via `size`) and it returns a list of lists. Thus, in the fist run it returns a list of two items, and in the second run, it returns a list of three-item lists.

Then, we count the sum of the items using the built-in `sum` function. And if this sum is the desired number 2020 then we are almost done. What is left is to multiply them. As soon as I wanted to make the program simpler and make this multiplication work for both cases when `size` is 2 or 3, I used another aggregate function `math.prod`, which multiplies all the values it gets in the `curr` list. Print this value and break the loop. That’s all!

P. S. The backslash on line 11 means that we continue the code on the next line. This is only needed to break the long line to fit the code in the screen on Instagram. You are free to remove \ and have lines 11 and 12 on the same line in your editor.

#python #python3 #aoc #aoc2020 #adventofcode #adventofcode2020 #programming #algorithms #coding #usingpython #pythonalgorithms